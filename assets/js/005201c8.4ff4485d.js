"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2380],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=i,d=u["".concat(p,".").concat(m)]||u[m]||f[m]||o;return n?r.createElement(d,a(a({ref:t},l),{},{components:n})):r.createElement(d,a({ref:t},l))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[u]="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2715:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={},a="\u5dee\u5206\u6570\u7ec4",c={unversionedId:"\u7b97\u6cd5/\u5dee\u5206\u6570\u7ec4",id:"\u7b97\u6cd5/\u5dee\u5206\u6570\u7ec4",title:"\u5dee\u5206\u6570\u7ec4",description:"\u5dee\u5206\u6570\u7ec4\u7684\u4e3b\u8981\u9002\u7528\u573a\u666f\u662f\u9891\u7e41\u5bf9\u539f\u59cb\u6570\u7ec4\u7684\u67d0\u4e2a\u533a\u95f4\u7684\u5143\u7d20\u8fdb\u884c\u589e\u51cf\u3002",source:"@site/docs/\u7b97\u6cd5/16. \u5dee\u5206\u6570\u7ec4.md",sourceDirName:"\u7b97\u6cd5",slug:"/\u7b97\u6cd5/\u5dee\u5206\u6570\u7ec4",permalink:"/cpp/\u7b97\u6cd5/\u5dee\u5206\u6570\u7ec4",draft:!1,tags:[],version:"current",sidebarPosition:16,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u6811\u5f62 dp",permalink:"/cpp/\u7b97\u6cd5/\u6811\u5f62dp"},next:{title:"ACM \u6a21\u5f0f\u5efa\u6811",permalink:"/cpp/\u7b97\u6cd5/ACM \u5efa\u6811"}},p={},s=[],l={toc:s};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u5dee\u5206\u6570\u7ec4"},"\u5dee\u5206\u6570\u7ec4"),(0,i.kt)("p",null,"\u5dee\u5206\u6570\u7ec4\u7684\u4e3b\u8981\u9002\u7528\u573a\u666f\u662f\u9891\u7e41\u5bf9\u539f\u59cb\u6570\u7ec4\u7684\u67d0\u4e2a\u533a\u95f4\u7684\u5143\u7d20\u8fdb\u884c\u589e\u51cf\u3002"),(0,i.kt)("p",null,"\u62fc\u8f66\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n  bool carPooling(vector<vector<int>> &trips, int capacity) {\n    if (trips.size() == 0)\n      return true;\n\n    // \u6784\u5efa\u5dee\u5206\u6570\u7ec4\n    vector<int> diff(10001, 0);\n    for (auto &item : trips) {\n      diff[item[1]] += item[0];\n      diff[item[2]] -= item[0];\n    }\n\n    // \u6784\u5efa\u539f\u59cb\u6570\u7ec4\n    vector<int> passengers(10001, 0);\n    for (int i = 0; i < 10001; i++) {\n      if (i == 0)\n        passengers[0] = diff[0];\n      else\n        passengers[i] = passengers[i - 1] + diff[i];\n\n      if (passengers[i] > capacity)\n        return false;\n    }\n    return true;\n  }\n};\n")))}u.isMDXComponent=!0}}]);