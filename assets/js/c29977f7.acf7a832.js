"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2412],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=c(n),f=i,m=s["".concat(p,".").concat(f)]||s[f]||u[f]||a;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4705:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={},o="\u5806",l={unversionedId:"algorithm/\u5806\u7684\u521b\u5efa",id:"algorithm/\u5806\u7684\u521b\u5efa",title:"\u5806",description:"\u5806\u7528\u4e8e\u52a8\u6001\u6c42\u53d6\u6781\u503c\u3002",source:"@site/docs/algorithm/4. \u5806\u7684\u521b\u5efa.md",sourceDirName:"algorithm",slug:"/algorithm/\u5806\u7684\u521b\u5efa",permalink:"/cpp/algorithm/\u5806\u7684\u521b\u5efa",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u6392\u5e8f\u7b97\u6cd5\u603b\u7ed3",permalink:"/cpp/algorithm/\u6392\u5e8f\u7b97\u6cd5\u603b\u7ed3"},next:{title:"\u524d\u7f00\u548c\u7b97\u6cd5",permalink:"/cpp/algorithm/\u524d\u7f00\u548c\u7b97\u6cd5"}},p={},c=[{value:"\u7ed9\u4e88\u4e8c\u53c9\u5806\u5b9e\u73b0",id:"\u7ed9\u4e88\u4e8c\u53c9\u5806\u5b9e\u73b0",level:2},{value:"Reference",id:"reference",level:2}],d={toc:c};function s(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u5806"},"\u5806"),(0,i.kt)("p",null,"\u5806\u7528\u4e8e",(0,i.kt)("strong",{parentName:"p"},"\u52a8\u6001\u6c42\u53d6\u6781\u503c"),"\u3002"),(0,i.kt)("h2",{id:"\u7ed9\u4e88\u4e8c\u53c9\u5806\u5b9e\u73b0"},"\u7ed9\u4e88\u4e8c\u53c9\u5806\u5b9e\u73b0"),(0,i.kt)("p",null,"\u4e8c\u53c9\u5806\u5c31\u662f\u4e00\u9897\u7279\u6b8a\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u5bf9\u4e8e\u5c0f\u9876\u5806\u6765\u8bf4\uff0c\u7236\u8282\u70b9\u7684\u6743\u503c\u4e0d\u5927\u4e8e\u513f\u5b50\u7684\u6743\u503c\u3002"),(0,i.kt)("p",null,"\u64cd\u4f5c\uff1a\u4e0b\u6c89 + \u4e0a\u6d6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'class Heap {\n  vector<int> data;\n  int size;\n\npublic:\n  Heap() : data({0}), size(0) {}\n\n  void Push(int val) {\n    data.push_back(val);\n    ShiftUp(data.size() - 1);\n    size++;\n  }\n\n  int Pop() {\n    if (data.size() <= 1) {\n      throw overflow_error("Data size");\n    }\n    int res = data[1];\n    swap(*(data.begin() + 1), *(data.end() - 1));\n    data.erase(data.end() - 1);\n    size--;\n    ShiftDown(1);\n    return res;\n  }\n\nprivate:\n  void ShiftDown(int index) {\n    int temp = data[index];\n    while ((index << 1) <= size) {\n      // \u5de6: 2*i \u53f3:2*i+1\n      int child = index << 1;\n      if (child != size && data[child + 1] < data[child]) {\n        // \u4f7f\u7528\u53f3\u8282\u70b9\n        child++;\n      }\n      if (temp > data[child]) {\n        data[index] = data[child];\n        index = child;\n      } else {\n        break;\n      }\n    }\n    data[index] = temp; // swap\n  }\n\n  void ShiftUp(int index) {\n    int temp = data[index];\n\n    while ((index >> 1) > 0) {\n      if (temp < data[index >> 1]) {\n        data[index] = data[index >> 1];\n        index = index >> 1;\n      } else\n        break;\n    }\n    data[index] = temp;\n  }\n};\n')),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u529b\u6263\u52a0\u52a0: ",(0,i.kt)("a",{parentName:"li",href:"https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/thinkings/heap"},"https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/thinkings/heap"))))}s.isMDXComponent=!0}}]);